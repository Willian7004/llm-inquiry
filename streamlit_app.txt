使用streamlit写一个程序，实现以下功能：
1.创建下拉菜单，生成“1-10”选项，计算当前目录下files文件夹中的.md文件数量，数量大于10则生成“11-20”选项，数量大于20则生成“21-30”选项，以此类推。
2.当前目录下files文件夹中的.md文件以数字命名，读取文件名上的数字与下拉菜单中选择的数字范围一致的文件，分别在高度为360的st.container中显示。

要实现这个功能，你可以使用Streamlit来创建一个交互式应用程序。以下是一个示例代码，展示了如何实现你描述的功能：

```python
import os
import streamlit as st

# 获取当前目录下files文件夹中的所有.md文件
def get_md_files():
    files_dir = os.path.join(os.getcwd(), 'files')
    if not os.path.exists(files_dir):
        os.makedirs(files_dir)
    md_files = [f for f in os.listdir(files_dir) if f.endswith('.md')]
    return md_files

# 根据.md文件数量生成下拉菜单选项
def generate_options(md_files):
    file_count = len(md_files)
    options = []
    for i in range(0, file_count, 10):
        start = i + 1
        end = min(i + 10, file_count)
        options.append(f"{start}-{end}")
    return options

# 读取并显示选定的.md文件内容
def display_selected_files(md_files, selected_range):
    start, end = map(int, selected_range.split('-'))
    files_dir = os.path.join(os.getcwd(), 'files')
    for i in range(start, end + 1):
        file_name = f"{i}.md"
        if file_name in md_files:
            file_path = os.path.join(files_dir, file_name)
            with open(file_path, 'r', encoding='utf-8') as file:
                content = file.read()
                with st.container(height=360):
                    st.write(f"### {file_name}")
                    st.write(content)

def main():
    st.title("Markdown 文件查看器")

    md_files = get_md_files()
    options = generate_options(md_files)

    if options:
        selected_range = st.selectbox("选择文件范围", options)
        display_selected_files(md_files, selected_range)
    else:
        st.write("files文件夹中没有.md文件。")

if __name__ == "__main__":
    main()
```

### 代码说明：
1. **get_md_files()**: 获取当前目录下`files`文件夹中的所有`.md`文件。
2. **generate_options()**: 根据`.md`文件的数量生成下拉菜单的选项。每10个文件生成一个选项，例如“1-10”、“11-20”等。
3. **display_selected_files()**: 根据用户选择的范围，读取并显示对应的`.md`文件内容。每个文件内容显示在一个高度为360的`st.container`中。
4. **main()**: 主函数，负责调用上述函数并构建Streamlit应用程序。

### 使用方法：
1. 将上述代码保存为一个Python文件，例如`app.py`。
2. 在终端中运行`streamlit run app.py`启动应用程序。
3. 在浏览器中打开Streamlit应用程序，选择文件范围后，程序会显示对应的`.md`文件内容。

### 注意事项：
- 确保`files`文件夹中存在以数字命名的`.md`文件，例如`1.md`、`2.md`等。
- 如果`files`文件夹不存在，程序会自动创建它。

希望这个示例代码能帮助你实现所需的功能！